name = "ckb_testnet"

[genesis]
version = 0
parent_hash = "0x0000000000000000000000000000000000000000000000000000000000000000"
timestamp = 1561788000134
difficulty = "0x1000"
uncles_hash = "0x0000000000000000000000000000000000000000000000000000000000000000"
nonce = 0
# run `cargo run cli hashes -b` to get the genesis hash
hash = "0xe5e7448a796352cc6e2dfbdd4dffaf98c8efb2f237fe57ff7d6c0ba7ab147127"

[genesis.genesis_cell]
message = "rylai-v9"

[genesis.genesis_cell.lock]
code_hash = "0xb35557e7e9854206f7bc13e3c3a7fa4cf8892c84a09237fb0aab40aab3771eee"
args = []
hash_type = "data"

# An array list paths to system cell files, which is absolute or relative to
# the directory containing this config file.
[[genesis.system_cells]]
file = { bundled = "specs/cells/secp256k1_blake160_sighash_all" }
create_type_id = true
[[genesis.system_cells]]
file = { bundled = "specs/cells/dao" }
create_type_id = true
[[genesis.system_cells]]
file = { bundled = "specs/cells/secp256k1_data" }
create_type_id = false
[[genesis.system_cells]]
file = { bundled = "specs/cells/secp256k1_ripemd160_sha256_sighash_all" }
create_type_id = true

[genesis.system_cells_lock]
code_hash = "0xb35557e7e9854206f7bc13e3c3a7fa4cf8892c84a09237fb0aab40aab3771eee"
args = []
hash_type = "data"

# Dep group cells
[genesis.dep_groups]
secp256k1_blake160_sighash_all = [
  { bundled = "specs/cells/secp256k1_data" },
  { bundled = "specs/cells/secp256k1_blake160_sighash_all" },
]
secp256k1_ripemd160_sha256_sighash_all = [
  { bundled = "specs/cells/secp256k1_data" },
  { bundled = "specs/cells/secp256k1_ripemd160_sha256_sighash_all" },
]

[genesis.bootstrap_lock]
code_hash = "0x68d5438ac952d2f584abf879527946a537e82c7f3c1cbf6d8ebf9767437d8e88"
# Lock for developers to run tests
args = ["0x64257f00b6b63e987609fa9be2d0c86d351020fb"]
hash_type = "type"

# Locks for developers to run tests
[[genesis.issued_cells]]
capacity = 50_000_000_00000000
lock.code_hash = "0x68d5438ac952d2f584abf879527946a537e82c7f3c1cbf6d8ebf9767437d8e88"
lock.args = ["0x64257f00b6b63e987609fa9be2d0c86d351020fb"]
lock.hash_type = "type"
[[genesis.issued_cells]]
capacity = 50_000_000_00000000
lock.code_hash = "0x68d5438ac952d2f584abf879527946a537e82c7f3c1cbf6d8ebf9767437d8e88"
lock.args = ["0x3f1573b44218d4c12a91919a58a863be415a2bc3"]
lock.hash_type = "type"
[[genesis.issued_cells]]
capacity = 50_000_000_00000000
lock.code_hash = "0x68d5438ac952d2f584abf879527946a537e82c7f3c1cbf6d8ebf9767437d8e88"
lock.args = ["0x57ccb07be6875f61d93636b0ee11b675494627d2"]
lock.hash_type = "type"

[params]
epoch_reward = 1_250_000_00000000
secondary_epoch_reward = 600_000_00000000
max_block_cycles = 10_000_000_000
# Cellbase outputs are "locked" and require 4 * MAX_EPOCH_LENGTH(1800) confirmations(approximately 16 hours)
# before they mature sufficiently to be spendable,
# This is to reduce the risk of later txs being reversed if a chain reorganization occurs.
cellbase_maturity = 7_200

[pow]
func = "Eaglesong"
